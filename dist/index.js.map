{
  "version": 3,
  "sources": ["../src/frontend/agreement-id/generate/index.ts"],
  "sourcesContent": ["import { DynamoDBClient, QueryCommand, QueryCommandInput, QueryCommandOutput } from '@aws-sdk/client-dynamodb';\n\nconst client = new DynamoDBClient({\n  region: process.env.REGION\n});\n\nconst tableName = process.env.AGREEMENT_ID_TABLE;\n\nexports.handler = async (): Promise<{ agreementId: string }> => {\n  let agreementId: string;\n  let isUnique = false;\n\n  while (!isUnique) {\n    agreementId = generateAgreementId();\n    const params: QueryCommandInput = {\n      TableName: tableName,\n      IndexName: 'AgreementIdIndex',\n      KeyConditionExpression: 'agreementId = :agreementId',\n      ExpressionAttributeValues: {\n        ':agreementId': { S: agreementId }\n      }\n    };\n\n    const command = new QueryCommand(params);\n    const response: QueryCommandOutput = await client.send(command);\n\n    if (response.Items?.length === 0) {\n      isUnique = true;\n      return { agreementId };\n    }\n  }\n\n  throw new Error('Unable to generate a unique agreement ID');\n};\n\nfunction generateAgreementId(): string {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\n"],
  "mappings": "aAAA,2BAAoF,oCAE9E,OAAS,IAAI,sCAAe,CAChC,OAAQ,QAAQ,IAAI,MACtB,CAAC,EAEK,UAAY,QAAQ,IAAI,mBAE9B,QAAQ,QAAU,SAA8C,CAC9D,IAAI,YACA,SAAW,GAEf,KAAO,CAAC,UAAU,CAChB,YAAc,oBAAoB,EAClC,IAAM,OAA4B,CAChC,UAAW,UACX,UAAW,mBACX,uBAAwB,6BACxB,0BAA2B,CACzB,eAAgB,CAAE,EAAG,WAAY,CACnC,CACF,EAEM,QAAU,IAAI,oCAAa,MAAM,EAGvC,IAFqC,MAAM,OAAO,KAAK,OAAO,GAEjD,OAAO,SAAW,EAC7B,gBAAW,GACJ,CAAE,WAAY,CAEzB,CAEA,MAAM,IAAI,MAAM,0CAA0C,CAC5D,EAEA,SAAS,qBAA8B,CACrC,OAAO,KAAK,MAAM,IAAQ,KAAK,OAAO,EAAI,GAAK,EAAE,SAAS,CAC5D",
  "names": []
}
